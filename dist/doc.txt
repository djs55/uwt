{1 Overview}

Uwt provides OCaml bindings for libuv. The main loop of libuv is
integrated into {{:https://ocsigen.org/lwt/manual/} [lwt]}, the
light-weight cooperative threads ("promise") library.

Uwt is {b not} {i compatible} with [lwt.unix]. It's not a further
[Lwt_engine] in addition to [select] and [libev]. It only uses the
system independent parts of lwt that can also be used with
{{:http://ocsigen.org/js_of_ocaml/} [JavaScript]} or
{{:http://www.ocamljava.org/} [ocamljava]}.

{2 Lwt Independent Core}

{!Uwt_base} contains type definitions and functions that are shared by
{!Uwt} and {!Uv_fs_sync}. {!Uwt_base} is included in {!Uwt}, you
usually don't use it directly.

{!modules:
Uwt_base
Uwt_bytes
}

{2 Uwt}

The main part of this library. The naming conventions mirror the
conventions of libuv, so you can easily consult the official
{{:http://docs.libuv.org/en/v1.x/index.html} [libuv manual]}.

Selected parts of the manual are now included inside the mli files
(credits to the {{:https://github.com/libuv/libuv/blob/v1.x/AUTHORS}
[authors]}), the libuv manual is however more up-to-date.

{!modules:
Uwt
}

{2 Higher Level Helpers}

[lwt.unix] also provides higher level modules. They have been ported
to [uwt] and have a very similar interface:

{!modules:
Uwt_throttle
Uwt_timeout
Uwt_io
Uwt_process
}

{2 Preemptive Threads}

The counterpart of [Lwt_preemptive] is in a separate findlib subpackage
[uwt.preemptive], because it introduces the dependency on the standard
threads library.

{!modules:
Uwt_preemptive
}

{2 Compatibility Helper}

{!Uwt_compat} provides aliases with module names as found in
[lwt.unix], e.g. [Lwt_io] instead of [Uwt_io] or [Lwt_main] instead of
{!Uwt.Main}).  This is necessary, if you want to use the
{{:https://ocsigen.org/lwt/2.7.0/api/Pa_lwt} [camlp4 syntax
extension]} of lwt. And it makes it easier to test or use existing
code with [uwt] instead of [lwt.unix].

{!modules:
Uwt_compat
}

{2 Synchronous File I/O}

{!Uv_fs_sync} (findlib name: [uwt.sync]) can be used for synchronous
filesystem operations. This might be useful, if you target Windows:

- additional options and functions are available, that are missing
  inside the standard Unix module.

- filenames and similar parameters and return values are always utf-8
  encoded.

{!modules:
Uv_fs_sync
}

{2 Index}

{!indexlist}

{2 Licenses}

Uwt is licensed under a MIT License.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

Libuv is also distributed under the MIT License.
